{"version":3,"sources":["components/ContactForm/index.jsx","components/ContactList/ContactItem/index.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","onAddContact","evt","preventDefault","trim","alert","props","addContact","setState","onChangeName","target","value","onChangeNumber","className","onSubmit","this","type","onChange","Component","ContactItem","id","deleteCallback","onClick","ContactList","list","map","item","key","Filter","filterCallback","e","App","contacts","filter","handleAddContact","findIndex","uuidv4","handleFilterChange","text","handleDeleteContact","getFilteredList","toLocaleLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f56d7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  }\n\n  onAddContact = (evt) => {\n    evt.preventDefault();\n    if (!this.state.name.trim() || !this.state.number.trim()) {\n      alert('Fields Name and Number are required!');\n      return false;\n    }\n    this.props.addContact(this.state.name, this.state.number);\n    this.setState({ name: '', number: '' });\n  }\n\n  onChangeName = (evt) => {\n    this.setState({ name: evt.target.value });\n  }\n\n  onChangeNumber = (evt) => {\n    this.setState({ number: evt.target.value });\n  }\n\n  render() {\n    return (\n      <form className=\"contact-form\" onSubmit={this.onAddContact}>\n        <label className=\"contact-form__label\">\n          Name\n          <input\n            className=\"contact-form__text-input\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.onChangeName}\n          />\n        </label>\n\n        <label className=\"contact-form__label\">\n          Number\n          <input\n            className=\"contact-form__text-input\"\n            type=\"text\"\n            value={this.state.number}\n            onChange={this.onChangeNumber}\n          />\n        </label>\n\n        <button\n          className=\"contact-form__submit-btn\"\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst ContactItem = ({ id, name, number, deleteCallback }) => (\n  <li className=\"contact-item\">\n    {name}: {number} <button className=\"contact-item__delete-btn\" onClick={() => deleteCallback(id)}>Delete</button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  deleteCallback: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ list, deleteCallback }) => {\n  return (\n    <ul>\n      {list.map((item) => (\n        <ContactItem\n          key={item.id}\n          id={item.id}\n          name={item.name}\n          number={item.number}\n          deleteCallback={deleteCallback}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  })),\n  deleteCallback: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filterCallback }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        onChange={(e) => filterCallback(e.target.value)}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filterCallback: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  handleAddContact = (name, number) => {\n    if ( -1 !== this.state.contacts.findIndex((item) => item.name === name)) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n    this.setState({\n      contacts: [...this.state.contacts, { id: uuidv4(), name, number }],\n    });\n  }\n\n  handleFilterChange = (text) => {\n    this.setState({ filter: text });\n  }\n\n  handleDeleteContact = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((item) => item.id !== id)\n    });\n  }\n\n  getFilteredList = () => {\n    return (\n      this.state.filter ?\n      this.state.contacts.filter((item) => item.name.toLocaleLowerCase().includes(this.state.filter.toLocaleLowerCase())) :\n      this.state.contacts\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"app-root\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          addContact={this.handleAddContact}\n        />\n\n        <h1>Contacts</h1>\n        <Filter\n          filterCallback={this.handleFilterChange}\n        />\n        <ContactList\n          list={this.getFilteredList()}\n          deleteCallback={this.handleDeleteContact}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}